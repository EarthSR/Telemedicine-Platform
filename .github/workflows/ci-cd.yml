name: CI/CD (Self-Hosted -> Docker Compose)

on:
  push:
    branches: [ "main", "dev" ]

jobs:
  pipeline:
    runs-on: self-hosted
    defaults:
      run:
        shell: bash
    steps:
      # 1) Checkout source code
      - name: 1) Checkout
        uses: actions/checkout@v4

      # 2) Setup Node
      - name: 2) Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 2.1) API tests
      - name: 2.1) API tests
        run: |
          npm ci || true
          npm test --if-present

      # 2.2) Web build check
      - name: 2.2) Web build check
        working-directory: telemed-web
        run: |
          npm ci || true
          npm run build --if-present

      # 3) Write .env from Secrets (ไม่ใส่ช่องว่างนำหน้า)
      - name: 3) Write .env from Secrets
        run: |
          printf "%s" "${{ secrets.ENV_FILE }}" > .env

      # 4) Deploy with Docker Compose
      - name: 4) docker compose build & up
        run: |
          set -e
          docker compose build --pull
          docker compose up -d --remove-orphans
          docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}"

      # 5) Healthchecks
      - name: 5.1) Healthcheck API
        run: |
          set -e
          code=$(curl -s -o /tmp/api_health.json -w "%{http_code}" http://127.0.0.1/api/health || true)
          echo "API HTTP $code"
          cat /tmp/api_health.json 2>/dev/null || true
          if [[ "$code" != "200" ]]; then
            echo "API unhealthy"
            exit 1
          fi

      - name: 5.2) Healthcheck Web
        run: |
          set -e
          code=$(curl -sI -o /dev/null -w "%{http_code}" http://127.0.0.1/ || true)
          echo "WEB HTTP $code"
          case "$code" in
            200|204|304) echo "WEB ok" ;;
            *) echo "WEB unhealthy"; exit 1 ;;
          esac
